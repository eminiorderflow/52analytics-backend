"""
Django settings for intraday_analytics project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g9$7zl90n6ns3&+1l^%dd4jyre0@42s)7kb#0*bjen5z9%@e=g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'channels',
    'pivots',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'order_flow',
    'rest_framework',
    'django_filters',
    'django_celery_results',
    'django_celery_beat',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'intraday_analytics.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # DIRS': [],
        'DIRS': ['D:/Git/intraday_engine/intraday_analytics/intraday_analytics/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
 'DEFAULT_AUTHENTICATION_CLASSES': (
     'rest_framework.authentication.TokenAuthentication',
 ),
 'DEFAULT_PERMISSION_CLASSES': (
     'rest_framework.permissions.AllowAny',
 ),
}

CORS_ORIGIN_WHITELIST = [
         'http://localhost',
         'http://127.0.0.1'
     ]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False

CORS_ALLOW_HEADERS = (
    '*'
)

# WSGI_APPLICATION = 'intraday_analytics.wsgi.application'
ASGI_APPLICATION = "intraday_analytics.routing.application"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'asgi_rabbitmq.RabbitmqChannelLayer',
        'CONFIG': {
            'url': 'amqp://localhost',
        },
    },
}

DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'intraday_analytics',
        'USER': 'postgres',
        'PASSWORD': 'admin',
        'HOST': '',
        'PORT': '',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Etc/GMT+6'

USE_I18N = True

USE_L10N = True

USE_TZ = True

BROKER_URL = 'amqp://localhost'
CELERY_RESULT_BACKEND = 'django-db'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# STATIC_URL = '/static/'

STATIC_URL = '/Git/intraday_engine/intraday_analytics/static/'
STATICFILES_DIRS = [
    '/Git/intraday_engine/intraday_analytics/static/',
    # os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = '/intraday_engine/intraday_analytics/static/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
                   'verbose': {
                        'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
                        'style': '{',
                   },
            },
    'handlers': {
            'file': {
                     'level': 'DEBUG',
                     'class': 'logging.FileHandler',
                     'formatter': 'verbose',
                     'filename': BASE_DIR + '/debug.log',

            },
            'console': {
                        'level': 'INFO',
                        'class': 'logging.StreamHandler',
                        'formatter': 'verbose'
            },
    },
    'loggers': {
        'intraday_analytics.tasks': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
    }
}
